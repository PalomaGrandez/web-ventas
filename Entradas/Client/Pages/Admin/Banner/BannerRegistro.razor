@page "/admin/banner/banner"
@page "/admin/banner/banner/{Id:int}"

@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
@inject IBannerService BannerService
@inject IAuthService AuthService

<AuthorizeView Roles="Admin">
    <Authorized>

        <PageTitle>@tituloPagina</PageTitle>

        <div style="height:20px"></div>

        <MudContainer MaxWidth="MaxWidth.Large">
            <EditForm Model="bannerRegistroDto" Context="formContext" OnValidSubmit="OnValidSubmit">
                <DataAnnotationsValidator />
                <MudGrid Justify="Justify.Center">
                    <MudItem lg="12">
                        <MudCard Elevation="3">
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.h5">@tituloPagina</MudText>
                                </CardHeaderContent>
                            </MudCardHeader>
                            <MudCardContent>
                                <MudGrid Justify="Justify.FlexStart">
                                    <MudItem lg="6" xs="12">
                                        <MudTextField Label="Imagen Url" Placeholder="Ingrese la Url de la Imagen" Variant="Variant.Outlined"
                                                      @bind-Value="bannerRegistroDto.Imagen" For="@(() => bannerRegistroDto.Imagen)" />
                                    </MudItem>
                                    <MudItem lg="6" xs="12">

                                        <MudSwitch T="bool"
                                                   Label="Activo"
                                                   @bind-Checked="bannerRegistroDto.FlagActivo"
                                                   Size="Size.Large"
                                                   Color="Color.Success"
                                                   For="@(() => bannerRegistroDto.FlagActivo)" />
                                    </MudItem>
                                </MudGrid>
                            </MudCardContent>
                            <MudCardActions>
                                <MudGrid Justify="Justify.FlexEnd">
                                    <MudItem>
                                        <MudButton ButtonType="ButtonType.Submit" Disabled="@guardarDisabled" Size="Size.Large" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Save" Class="ml-auto">
                                            @if (guardarDisabled)
                                            {
                                                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                                                <MudText Class="ms-2">Guardando</MudText>
                                            }
                                            else
                                            {
                                                @*<MudText>@btnText</MudText>*@
                                                @btnText
                                            }
                                        </MudButton>
                                    </MudItem>
                                    <MudItem>
                                        <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Size="Size.Large" Color="Color.Error" StartIcon="@Icons.Material.Filled.Cancel" Class="ml-auto" OnClick="Cancelar">Cancelar</MudButton>
                                    </MudItem>
                                </MudGrid>
                            </MudCardActions>
                        </MudCard>
                    </MudItem>
                </MudGrid>
            </EditForm>
        </MudContainer>

    </Authorized>
    <NotAuthorized>
        <PaginaNoAutorizada />
    </NotAuthorized>
</AuthorizeView>

@code {
    [Parameter]
    public int? Id { get; set; }

    private string tituloPagina = string.Empty;

    private BannerRegistroDto bannerRegistroDto = new();
    private Banner bannerModel = new();

    private bool guardarDisabled = false;

    private string btnText = string.Empty;
    private string mensaje = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        var isAuthenticated = await AuthService.IsUserAuthenticated();
        var rol = await AuthService.GetUserRole();

        if (isAuthenticated && rol.Equals("Admin"))
        {
            btnText = Id == null ? "REGISTRAR" : "ACTUALIZAR";
            tituloPagina = Id == null ? "Registrar Banner" : $"Actualizar Banner";
            mensaje = string.Empty;

            //Validar
            if (Id != null)
            {
                var response = await BannerService.GetBannerById((int)Id);

                if (!response.Success)
                {
                    mensaje = response.Message;
                }
                else
                {
                    bannerModel = response.Data!;

                    bannerRegistroDto.BannerId = bannerModel.BannerId;
                    bannerRegistroDto.Imagen = bannerModel.Imagen;
                    bannerRegistroDto.FlagActivo = bannerModel.FlagActivo;
                }
            }
        }
    }

    private async Task OnValidSubmit()
    {
        guardarDisabled = true;
        Banner bannerModel = new();

        if (Id == null)
        {
            bannerModel.Imagen = bannerRegistroDto.Imagen;
            bannerModel.FlagActivo = bannerRegistroDto.FlagActivo;

            await BannerService.CreateBanner(bannerModel);
            guardarDisabled = false;
        }
        else
        {
            bannerModel.BannerId = bannerRegistroDto.BannerId;
            bannerModel.Imagen = bannerRegistroDto.Imagen;
            bannerModel.FlagActivo = bannerRegistroDto.FlagActivo;

            await BannerService.UpdateBanner(bannerModel);

            Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
            Snackbar.Clear();
            Snackbar.Add($"Se actualizo el estado del banner exitosamenet.", Severity.Success);

            guardarDisabled = false;
        }

        StateHasChanged();

        NavigationManager.NavigateTo("/admin/banner/banner-listado");
    }

    private void Cancelar()
    {
        NavigationManager.NavigateTo("/admin/banner/banner-listado");

    }
}
